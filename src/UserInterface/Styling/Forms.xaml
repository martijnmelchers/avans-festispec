<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource Gray}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource DarkGray}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <!-- This gets rid of the double-border when a validation error has occurred. -->
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Red}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>

    </Style>


    <Style TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border"
                            CornerRadius="5"
                            Padding="0"
                            BorderThickness="1.5">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource Gray}" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource DarkGray}" />
                        </Border.BorderBrush>
                        <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="35" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="5"
                Background="#F7F6F6"
                BorderBrush="#CFCFCF"
                BorderThickness="1.5" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Fill="#00D68D"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="20"
                Stretch="Uniform"
                Data="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButtonHidden" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="35" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="5"
                Background="#F7F6F6"
                BorderBrush="#CFCFCF"
                BorderThickness="1.5" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press" />
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="10,10,23,10"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#F7F6F6"
                                    BorderBrush="#CFCFCF"
                                    BorderThickness="1"
                                    CornerRadius="0,0,5,5" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDown" Property="Margin" Value="0,5,0,0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,-3,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="#707070" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="5"
                            CornerRadius="5"
                            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#00D68D" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="white" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">

        <Setter Property="SnapsToDevicePixels" Value="False" />

        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource Gray}" />
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource DarkGray}" />
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="CheckBox">

                    <BulletDecorator Background="Transparent">

                        <BulletDecorator.Bullet>

                            <Border x:Name="Border"
                                    Width="24"
                                    Height="24"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    ClipToBounds="True"
                                    CornerRadius="4">


                                <Path x:Name="CheckMark"
                                      Width="20"
                                      Height="15"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M8.488,83.368.366,75.246a1.25,1.25,0,0,1,0-1.767l1.767-1.767a1.25,1.25,0,0,1,1.767,0l5.471,5.471L21.091,65.464a1.25,1.25,0,0,1,1.767,0l1.767,1.767a1.25,1.25,0,0,1,0,1.767l-14.37,14.37a1.25,1.25,0,0,1-1.767,0Z"
                                      Stretch="Fill"
                                      Stroke="#00D68D"
                                      Fill="#00D68D"
                                      StrokeThickness="1" />

                            </Border>

                        </BulletDecorator.Bullet>

                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />

                    </BulletDecorator>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="false">

                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />

                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="BorderBrush" Value="#00D68D" />

                            <Setter TargetName="CheckMark" Property="Stroke" Value="#00D68D" />

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource Gray}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource DarkGray}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <!-- This gets rid of the double-border when a validation error has occurred. -->
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Red}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <!-- Adapted from https://stackoverflow.com/questions/45056411/wpf-datepicker-inner-border-deactivate -->
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                            <Grid>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="WatermarkBrush" Color="{DynamicResource Gray}" />
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unwatermarked" />
                                        <VisualState x:Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="ContentElement" />
                                                <DoubleAnimation Duration="0" To="1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="PART_Watermark" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"
                                        Opacity="1"
                                        Padding="{TemplateBinding Padding}">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource Gray}" />
                                    </Border.Background>
                                    <Grid x:Name="WatermarkContent"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border x:Name="ContentElement" BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource Gray}" />
                                            </Border.BorderBrush>
                                        </Border>
                                        <Border x:Name="watermark_decorator"
                                                BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource Gray}" />
                                            </Border.BorderBrush>
                                            <ContentControl x:Name="PART_Watermark" Focusable="False"
                                                            IsHitTestVisible="False" Opacity="0" Padding="2" />
                                        </Border>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="0"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

    </Style>
</ResourceDictionary>